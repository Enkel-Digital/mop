// Creates a new user account and returns the user document ID
async function createUserAccount(userDetails) {
  if (!userDetails.number)
    throw new Error("Missing Phone Number, number needed to create account");

  // Parse number from string input to Number and make sure that the parsing worked
  userDetails.number = parseInt(userDetails.number);
  if (Number.isNaN(userDetails.number))
    return alert("Invalid number format, please only use numerical digits");

  return (
    require("./fs")
      .collection("users")
      // The documents are not keyed using email as it can change, they are keyed using firestore autogenerated UID
      .add({
        ...userDetails,

        // Store time user account is created in unix seconds (this is the time of the server executing the code)
        createdAt: require("unixseconds")(),
      })
      .then(({ id }) => id)
  );
}

/**
 * Create account if does not exists and get back customer/user object
 * @param {*} userID
 * @param {*} customer
 * @returns {Customer} Returns back a customer/user data object
 */
const createUserAccountIfDoesNotExist = async (userID, customer) =>
  userID
    ? await require("../utils/getUserAccount").getUserAccount(userID)
    : (await require("../utils/getUserAccount").getUserAccountIfExists(
        customer.number
      )) || { id: await createUserAccount(customer), ...customer };

module.exports = { createUserAccount, createUserAccountIfDoesNotExist };
